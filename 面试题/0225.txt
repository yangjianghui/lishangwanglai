1.es6有哪些新特性？
    1.不一样的变量声明：const和let
    2.模板字符串
    3.箭头函数
    4.函数的默认参数值
    5.对象和数据解构
2.清除浮动的几种方法？
    1.额外标签法（在最后一个浮动标签后，新加一个标签，给其设置clear：both；）
    2.父级添加overflow属性（父元素添加overflow:hidden）
    3.使用after伪元素清除浮动
        .clearfix:after{/*伪元素是行内元素 正常浏览器清除浮动方法*/
            content: "";
            display: block;
            height: 0;
            clear:both;
            visibility: hidden;
        }
        .clearfix{
            *zoom: 1;/*ie6清除浮动的方式 *号只有IE6-IE7执行，其他浏览器不执行*/
        }
    4.使用before和after双伪元素清除浮动
        .clearfix:after,.clearfix:before{
            content: "";
            display: table;
        }
        .clearfix:after{
            clear: both;
        }
        .clearfix{
            *zoom: 1;
        }
3.css3有哪些新特性？
    1. CSS3实现圆角（border-radius），阴影（box-shadow），边框图片border-image
    2. 对文字加特效（text-shadow、），强制文本换行（word-wrap），线性渐变（linear-gradient）
    3.旋转,缩放,定位,倾斜：transform:rotate(90deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);
    4. 增加了更多的CSS选择器、多背景、rgba()；
    5. 在CSS3中唯一引入的伪元素是 ::selection ；
    6. 媒体查询(@media)，多栏布局（flex） 
4.vue-router有哪几种导航钩子？
    三种，
    一种是全局导航钩子：router.beforeEach(to,from,next)，
        作用：跳转前进行判断拦截。
    第二种：组件内的钩子；
    第三种：单独路由独享组件
5.Javascript字符串操作函数有哪些？
    1.字符串转换
    2.字符串分割
        split()的第二个参数，表示返回的字符串数组的最大长度。
    3.获取字符串长度
    4.查询子字符串
        第一个函数：indexOf()，它从字符串的开头开始查找，找到返回对应坐标，找不到返回-1
        第二个函数：lastIndexOf()，它从字符串的末尾开始查找，找到返回对应坐标，找不到返回-1。
    5、字符串替换
    6、查找给定位置的字符或其字符编码值
    7、字符串连接
    8、字符串切割和提取
        有三种可以从字符串中抽取和切割的方法，如：
        第一种，使用slice():
        第二种，使用substring():
        第三种，使用substr():
        与第一种和第二种不同的是，substr()第二个参数代表截取的字符串最大长度，
    9.字符串大小写转换
    10、字符串匹配
        match()函数在字符串上调用，并且接受一个正则的参数。
        xec()函数是在正则上调用，传递字符串的参数。
    11、字符串比较
6.什么是跨域，如何实现跨域访问？
    指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器对javascript施加的安全限制
    基本原理就是通过动态创建script标签,然后利用src属性进行跨域.返回的js脚本，直接会执行。所以就执行了事先定义好的fun函数了，并且把数据传入了进来
    可以使用jsonp解决
7.请简述Vue的双向数据绑定原理是什么？
    VUE实现双向数据绑定的原理就是利用了 Object.defineProperty() 这个方法重新定义了对象获取属性值(get)和设置属性值(set)的操作来实现的。它接收三个参数，要操作的对象，要定义或修改的对象属性名，属性描述符。重点就是最后的属性描述符。属性描述符是一个对象，主要有两种形式：数据描述符和存取描述符。
8.闭包的3特性
    1.子函数使用父函数变量的行为
    2.延长父函数变量的生命周期
    3.扩展父函数的空间
9.var numbers=[1,2,3,4];将numbers转换成“-”连接起来的字符串
    var numbers = [1,2,3,4];
    var s = numbers.join("-");
    console.log(s);
10.请详细说下你对Vue生命周期的理解？
    总共分为8个阶段创建前/后，载入前/后，更新前/后，销毁前/后。
    创建前/后： 在beforeCreated阶段，vue实例的挂载元素$el和**数据对象**data都为undefined，还未初始化。在created阶段，vue实例的数据对象data有了，$el还没有。
    载入前/后：在beforeMount阶段，vue实例的$el和data都初始化了，但还是挂载之前为虚拟的dom节点，data.message还未替换。在mounted阶段，vue实例挂载完成，data.message成功渲染。
    更新前/后：当data变化时，会触发beforeUpdate和updated方法。
    销毁前/后：在执行destroy方法后，对data的改变不会再触发周期函数，说明此时vue实例已经解除了事件监听以及和dom的绑定，但是dom结构依然存在
11.请说下VUE组件间的传值？
    父组件与子组件传值
    父组件通过标签上面定义传值
    子组件通过props方法接受数据
    子组件向父组件传递数据
    子组件通过$emit方法传递参数
12.浏览器本地存储有哪几种，区别是什么？
    HTML本地存储有cookies、 localStorage 、sessionStorage、Web SQL、IndexedDB。
    cookies： 在HTML5标准前本地储存的主要方式，优点是兼容性好，请求头自带cookie方便，缺点是大小只有4k，自动请求头加入cookie浪费流量，每个domain限制20个cookie，使用起来麻烦需要自行封装
    localStorage：HTML5加入的以键值对(Key-Value)为标准的方式，优点是操作方便，永久性储存（除非手动删除），大小为5M，兼容IE8+
    sessionStorage：与localStorage基本类似，区别是sessionStorage当页面关闭后会被清理，而且与cookie、localStorage不同，他不能在所有同源窗口中共享，是会话级别的储存方式
    Web SQL：2010年被W3C废弃的本地数据库数据存储方案，但是主流浏览器（火狐除外）都已经有了相关的实现，web sql类似于SQLite，是真正意义上的关系型数据库，用sql进行操作，当我们用JAVAScript时要进行转换，较为繁琐。
    IndexedDB： 是被正式纳入HTML5标准的数据库储存方案，它是NoSQL数据库，用键值对进行储存，可以进行快速读取操作，非常适合web场景，同时用JavaScript进行操作会非常方便。